# Use postgres/example user/password credentials
version: '3.1'

volumes:
  postgres-data:
  openolat-data:
  openolat-logs:
  certbot-conf:
  certbot-www:

services:

  postgres:
    build:
      context: postgres
      args:
        - JDK_URL=$JDK_URL
        - TOMCAT_URL=$TOMCAT_URL
        - OPENOLAT_URL=$OPENOLAT_URL
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: oodbu
      POSTGRES_PASSWORD: oodbpasswd
      POSTGRES_DB: oodb
      PGDATA: /var/lib/postgresql/data
    expose: 
      - 5432

  openolat:
    build: 
      context: openolat
      args:
        - ARG OPENOLAT_URL=$OPENOLAT_URL
    volumes:
      - openolat-data:/home/openolat/olatdata
      - openolat-logs:/home/openolat/logs
    restart: always
    ports:
      - ${OLAT_PORT:-8088}:8088
    depends_on:
      - postgres

  nginx:
    image: nginx:1.23.4-alpine
    volumes: 
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates:ro
      - certbot-conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - openolat
    ports:
      - "80:80"
      - "443:443"      
    restart: always
    environment:
      - NGINX_HOST=${NGINX_HOST}
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/templates
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.template
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/conf.d
      - OLAT_PORT=${OLAT_PORT:-8088}
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.nginx-reload.schedule: "@every 6h"
      ofelia.job-exec.nginx-reload.command: "nginx -s reload"      

  certbot:
    image: certbot/certbot      
    volumes:
      - certbot-conf:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.certbot.schedule: "@every 12h"
      ofelia.job-exec.certbot.command: "certonly"

  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - nginx
      - certbot
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
